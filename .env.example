# Actors Multi-Agent System - Environment Variables
# Copy this file to .env.local and fill in your actual values

# ===========================================
# REQUIRED CONFIGURATION
# ===========================================

# Supabase Configuration (Required)
# Your Supabase project URL and service role key
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_KEY=your_supabase_service_role_key_here

# Alternative: Separate URLs for different services (optional)
# SUPABASE_AUTH_URL=https://your-project.supabase.co
# SUPABASE_AUTH_KEY=your_supabase_service_role_key_here
# SESSIONS_SUPABASE_URL=https://your-project.supabase.co
# SESSIONS_SUPABASE_KEY=your_supabase_service_role_key_here

# OpenRouter API Key (Required)
# Get your API key from https://openrouter.ai/
OPENROUTER_KEY=sk-or-v1-your_openrouter_key_here

# JWT Secret Key (Required - 32+ characters for security)
# Generate a secure random string for JWT token signing
JWT_SECRET_KEY=your_secure_jwt_secret_key_at_least_32_characters_long

# ===========================================
# OPTIONAL CONFIGURATION
# ===========================================

# Application Settings
DEBUG=false
LOG_LEVEL=INFO
LOG_FILE=logs/actors.log
LOG_MAX_BYTES=10485760
LOG_BACKUP_COUNT=5

# Authentication Settings
ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_ALGORITHM=HS256

# MCP Server URLs (if running local MCP servers)
WEATHER_MCP_SERVER_URL=http://localhost:11000/sse
TIME_MCP_SERVER_URL=http://localhost:11001/sse

# External API Keys (optional)
# PERPLEXITY_API_KEY=your_perplexity_key_here
# ALPHA_VANTAGE_API_KEY=your_alpha_vantage_key_here
# OPENAI_API_KEY=your_openai_key_here

# Development/Debugging
# OPENAI_TRACING_API_KEY=your_openai_tracing_key_here

# ===========================================
# SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env.local
# 2. Replace all placeholder values with your actual API keys and URLs
# 3. Ensure JWT_SECRET_KEY is at least 32 characters long
# 4. Set up your Supabase database using src/schema.sql
# 5. Run the application with: python -m src.api.api